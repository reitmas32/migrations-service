// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: device.sql

package db

import (
	"context"
)

const createDevice = `-- name: CreateDevice :one
INSERT INTO devices (operative_system, os_version, token, model)
VALUES ($1, $2, $3, $4)
RETURNING id, user_id, operative_system, os_version, token, model, created_at, updated_at
`

type CreateDeviceParams struct {
	OperativeSystem string
	OsVersion       string
	Token           string
	Model           string
}

func (q *Queries) CreateDevice(ctx context.Context, arg CreateDeviceParams) (Device, error) {
	row := q.db.QueryRowContext(ctx, createDevice,
		arg.OperativeSystem,
		arg.OsVersion,
		arg.Token,
		arg.Model,
	)
	var i Device
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.OperativeSystem,
		&i.OsVersion,
		&i.Token,
		&i.Model,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getDeviceByToken = `-- name: GetDeviceByToken :one
SELECT id, user_id, operative_system, os_version, token, model, created_at, updated_at
FROM devices
WHERE token = $1
`

func (q *Queries) GetDeviceByToken(ctx context.Context, token string) (Device, error) {
	row := q.db.QueryRowContext(ctx, getDeviceByToken, token)
	var i Device
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.OperativeSystem,
		&i.OsVersion,
		&i.Token,
		&i.Model,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
